---
title: Managing Apps and Service Instances Using Apps Manager
owner: Apps Manager
---

You can view and manage apps and service instances with Apps Manager.

You can use Apps Manager to manage apps, service instances, service keys, and route services. This includes tasks such as scaling apps, binding apps to services, generating services keys, and more.

For information about managing orgs and spaces, see [Managing Orgs and Spaces Using Apps Manager](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.11/tas-for-vms/manage-spaces.html).

<!-- This ensures that the following note only appears in the TAS for VMs docs, not in the offline TAS docs.  -->
<% if vars.disallow_multi_foundation == true %>
<% else %>
You can manage apps and service instances across multiple foundations. For more information, see [Configuring Multi-Foundation Support in Apps Manager](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.11/tas-for-vms/configure-multi-foundation.html).
<% end %>


## <a id='prerequisite'></a> Prerequisite

To view and manage apps and service instances with Apps Manager, you must log in to Apps Manager with an account that has adequate permissions.

For more information, see [About Permissions](dev-console.html#permissions) in _Getting Started with Apps Manager_.


## <a id='manage-app'></a> Manage an App

This section describes how to manage an app in Apps Manager.

You can do the following tasks to manage apps in Apps Manager:

* View app summary information
* Start and stop apps
* Scale apps
* View sidecar processes
* View key app metrics
* Bind apps to services
* Manage environment variables and routes
* View logs and usage information
* View app revisions
* Re-deploy app revisions
* Delete apps
* Terminate specific instances of apps

### <a id="view"></a> View App Overview

The **Overview** page for an app includes app summary information, such as app processes and instances, app memory and disk space, and app events.

These are the ways to go to the app **Overview** page:

* On the space page, click the app you want to manage.
* Search for an app by entering its name in the search bar.

The following image shows an example of an app **Overview** page.

![alt-text="The example Apps Manager dashboard shows at the top heading the name of the example app, 'cf-nodejs', with a stop and refresh button to the right. A green status icon says 'Running'. The following image shows a horizontal series of tabs with the 'Overview' tab selected. The following 'Overview' pane shows an 'Events' section, 'App Summary' section, and 'Processes and Instances' section."](./images/app-page.png)

### <a id="start-stop"></a> Start, Stop, or Restage an App

You can start, stop, and restage from the **Overview** page of the app. The start, stop, and restage buttons are located on the app **Overview** page next to the name of the app.

The following image shows the location of the start, stop, and restage buttons.

To edit the following diagram, go to https://drive.google.com/file/d/1X4GPXIaf9gPIjkHiDHDxTZWWVY4Wt0qn/view?usp=sharing.
You must be in the Pivotal org to edit the diagram.

![alt-text="The app name is shown to the left as a header 2 called 'app-0001-0000'. To the right of the app name is three buttons: one with a 'stop' icon, another with a 'restart' icon, and the last with a 'restage' icon."](./images/stop-restart-restage-app.png)


For more information about starting, stopping, and restaging apps with the Cloud Foundry Command Line Interface (cf CLI), see [Starting, Restarting, and Restaging Apps](../devguide/deploy-apps/start-restart-restage.html).

### <a id="scale"></a> Scale an App

From the app **Overview** page, you can scale an app manually or configure App Autoscaler to scale it automatically.

#### <a id="manual-scale"></a> Scale an App Manually

To manually scale an app:

1. Go to the app **Overview** page.

1. Under **Processes and Instances**, click **Scale** to open the **Scale app** dialog.

    ![alt-text="In the 'Processes and Instances' section of the 'Overview' pane, find the 'Scale' button to the right of each process."](./images/scale-app.png)

1. Edit the number of **Instances**, the **Memory Limit**, and the **Disk Limit** as desired.

1. Click **Apply Changes**.

#### <a id="autoscale"></a> Enable App Autoscaler

You can enable App Autoscaler to automatically scale your apps. For information about how to configure App Autoscaler to scale an app automatically, see [Configure Autoscaling for an App](../appsman-services/autoscaler/using-autoscaler.html#config) in _Scaling an App Using App Autoscaler_.

To enable App Autoscaler for an app:

1. Go to the app **Overview** page.

1. Under **Processes and Instances**, click **Enable Autoscaling** to enable App Autoscaler.

    ![alt-text="In the 'Processes and Instances' section of the 'Overview' pane, find 'Enable Autoscaling' two rows following the title of each process."](./images/enable-autoscaling.png)

1. Click **Manage Autoscaling** to open App Autoscaler.

### <a id='view-sidecars'></a> View Sidecar Processes

You can view the sidecar processes associated with your app from the app **Overview** page.

To view sidecar processes associated with your apps:

1. Go to the app **Overview** page.

1. Under **Processes and Instances**, see **Sidecars**. This section only appears if your app has any sidecar processes.

   ![alt-text="At the top of the image is the header "Processes and Instances". There are six white, rectangular rows. The top row contains the label "web (Revision 1)" on the left side, and two buttons on the right side: one white, rectangular button with a blue border that is labeled "Enable Autoscaling" in blue letters; and to the right of "Enable Autoscaling", one shorter, blue, rectangular button labeled "Scale""](./images/sidecars.png)


For more information about sidecar processes, see [Pushing Apps with Sidecar Processes](../devguide/sidecars.html).

### <a id='view-key-metrics'></a> View Key Metrics (Beta)

If Metric Store is installed, you can view the following key metrics for an app in the **Key Metrics** section of the app **Overview** page:

* CPU
* Memory
* Disk
* Request Latency
* Request Rate
* Request Errors

For more information about each metric, see [Interpret Metrics](https://docs.pivotal.io/app-metrics/1-6/using.html#interpret-metrics)
in _Monitoring and Troubleshooting Apps with Metrics_.

For each metric, the app **Overview** page includes a graph that shows metric behavior over the past three hours.
You can hover over the data points on the graph to view the value of the metric.
The page also includes the average value for the metric over the past three hours.

Metric Store is required for Apps Manager to display the **Key Metrics** section.
For information about installing and configuring Metric Store, see [Metric Store](https://docs.pivotal.io/metric-store).

The following image is an example of an app **Overview** page, showing key metrics for the app.

![alt-text="The example Apps Manager app overview page shows the six key metrics (CPU, Disk, Request Latency, Request Rate, and Request Errors"](./images/app-page-with-metrics.png)

### <a id="bind-unbind-services"></a> Bind or Unbind Services

You can bind your app to new or existing service instances. You can also unbind your app from service instances.

#### <a id="bind-existing-services"></a> Bind an App to an Existing Service

<p class="note"><strong>Note:</strong> For services that use asynchronous bindings, Apps Manager displays the status of the service while the bind is still pending. Asynchronous bindings provide more flexibility for services that require additional time before returning a successful bind response.</p>

To bind your app to an existing service:

1. Go to the app **Overview** page.

1. In the panel on the left side of the screen, under **Application**, click **Services**.
    ![alt-text=""](./images/bound-services.png)
1. Click **Bind Service**.

1. For **Service to Bind**, select the service instance from the drop-down menu.

1. (Optional) For **Binding Name**, enter a binding name in all lowercase letters. For example, `bind-usr-serv`.

1. (Optional) For **Add Parameters**, specify additional parameters.

1. Click **Bind**.

#### <a id="bind-new-services"></a> Bind an App to a New Service

To bind your app to a new service instance:

1.  Go to the app **Overview** page.

1. In the panel, under **Application**, click **Services**.

1. Click **New Service**.<br>
    ![alt-text=""](./images/new-service.png)
    <br>
    <p class="note"><strong>Note:</strong> If you prefer to create the new service instance in the Marketplace, you can click <strong>View in Marketplace</strong> at any time.</p>

1. Click the service.

1. Select a plan and click **Select Plan**.

1. Under **Instance Name**, enter a name for the instance.

1. (Optional) For **Binding Name**, enter a binding name in all lowercase letters. For example, `bind-usr-serv`.

1. (Optional) For **Add Parameters**, specify additional parameters. For a list of supported configuration parameters, consult the documentation for the service.

1. Click **Create**.

#### <a id="unbind-services"></a> Unbind a Service

To unbind your app from a service instance:

1. Go to the app **Overview** page.

1. Go to **Application** and click **Services**.

1. Locate the service instance in the **Bound Services** list.

1. Click the three-dot icon.

1. Select **Unbind** from the drop-down menu.

### <a id="routes"></a> Map or Unmap Routes

The **Routes** page shows the routes associated with your app. You can use this page to map and unmap routes for your app.

#### <a id="map-routes"></a> Map Routes

To map routes to your app:

1. Go to the app **Overview** page.

1. Go to **Networking**, and click **Routes**.

1. To add a new route, click **Map a Route**.
    ![alt-text=""](./images/routes.png)
1. Enter the route and click **Map**.

1. Under **Choose Protocol**, select either **HTTP1** or **HTTP2**.

#### <a id="unmap-routes"></a> Unmap Routes

To unmap a route from your app:

1. Go to the app **Overview** page.

1. Go to **Networking**, and click **Routes**.

1. Locate the route from the list and click the **x**.

1. Click **Unmap** in the pop-up window to confirm.

#### <a id="route-protocol"></a> Change the Destination Protocol for a Route

To change the destination app protocol for a route:

1. Go to the app **Overview** page.

1. In the panel on the left side of the screen, under **Networking**, click **Routes**.

1. To change the destination protocol for a route, under **App Protocol**, select either **HTTP1** or **HTTP2**.

1. Click **Save**.

### <a id="networking"></a> Create Container-to-Container Networking Policies

Container networking policies enable app instances to communicate with each other directly. You can create container networking policies in the **Networking** tab.

For more information about container-to-container networking in <%= vars.platform_name %>, see [Container-to-Container Networking](../concepts/understand-cf-networking.html).

<p class="note"><strong>Note:</strong> To view and use the <strong>Networking</strong> tab, you must have either the <code>network.write</code> or <code>network.admin</code> UAA scope. If you do not see the <strong>Networking</strong> tab, request one of the previous scopes from your <%= vars.platform_name %> administrator.</p>

To create container-to-container networking policies:

1. Go to the app **Overview** page.

1. Go to **Networking**, and click **Container Networking**. The page displays any container networking policies associated with the app.

1. To add a new network policy, click **Create Policy** or **Add a network policy**.
    ![alt-text=""](./images/add-policy-form.png)
1. In the **Add Policy** window, configure the following:
    *  For **Org**, select the org of the destination app.
    *  For **Space**, select the space of the destination app.
    *  For **App**, select the destination app.
    *  For **Protocol**, select **TCP** or **UDP**.
    *  For **Ports**, enter the ports at which to connect to the destination app. The allowed range is from `1` to `65535`. You can specify a single port, such as `8080`, or a range of ports, such as `8080-8090`.

1. Click **Save**.

### <a id="revisions"></a> Manage App Revisions

A revision represents code and configuration used by an app at a specific time. It is a Cloud Foundry API (CAPI) object that can contain references to a droplet, custom start command, and environment variables. The most recent revision for a running app represents code and configuration currently running in <%= vars.platform_name %>.

You can view revisions, list environment variables associated with revisions, and re-deploy previous revisions in the **Revisions** tab.

For more information about app revisions in <%= vars.platform_name %>, see [App Revisions](../devguide/revisions.html).

#### <a id="view-revisions"></a> View App Revisions

To list revisions for an app:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Revisions**.

1. View app revisions in the **Revisions** table.

#### <a id="revision-env-vars"></a> List Environment Variables for an App Revision

To list environment variables associated with an app revision:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Revisions**.

1. In the **Revisions** table, select the row that contains the revision. The row expands to reveal metadata and environment variables associated with the revision.

#### <a id="rollback"></a> Roll Back to a Previous App Revision

To roll back an app to a previous revision:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Revisions**.

1. In the **Revisions** table, select the row that contains the revision you want to roll back to. The row expands to reveal metadata.

1. Click **Redeploy**.

### <a id="logs"></a> View Logs

You can view logs for an app in Apps Manager. You can also use Apps Manager to view a live stream of app logs.

To view logs for an app:

1. Go to the app **Overview** page.

1. Go to **Observability**, and click **Logs**.

1. Click the Play button to view a live version of the logs.

### <a id='tasks'></a> Manage Tasks

The **Tasks** page includes jobs and tasks associated with an app. It displays a table containing **Task ID**, **State**, **Start Time**, **Task Name**, and **Command**.

From the **Tasks** page, you can view tasks, run tasks, and enable task scheduling.

#### <a id='view'></a> View Tasks

You can view tasks for an app on the Tasks page in Apps Manager.

To access the **Tasks page**:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Tasks**.

#### <a id='run'></a> Run a Task

To run a task for an app:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Tasks**.

1. Click **Run Task** to create a task.


    ![alt-text=""](./images/run-task.png)

1. (Optional) Enter a **Task Name**.

1. Enter the **Task Command**.

1. Select a **Memory Limit** and a **Disk Limit** for the task.

1. Click **Run**.

#### <a id="enable-scheduling"></a> Enable Task Scheduling

In the **Tasks** tab, click **Enable Scheduling** to bind the Scheduler service to your app. For more about Scheduler, see [Scheduling jobs](https://docs.vmware.com/en/Scheduler-for-VMware-Tanzu/1.6/scheduler-vmware-tanzu/GUID-index.html) in the Scheduler documentation.

![alt-text="The Apps Manager interface shows the Task tab enabled with a box beneath that says "The Scheduler Service has not been enabled yet." with an "Enable Scheduling" button beneath."](./images/enable-scheduling.png)

#### <a id="schedule-task"></a> Schedule a Task

To schedule a task:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Tasks**.

1. Click **Create Job** to schedule a task.

    ![alt-text=""](./images/create-job-window.png)

1. Enter a **Job Name**.

1. Enter a **Command**.

2. Enter one or more **Cron Expressions** for the task schedule or schedules you want. For more information about cron expression syntax, see [Scheduling jobs](https://docs.vmware.com/en/Scheduler-for-VMware-Tanzu/1.6/scheduler-vmware-tanzu/GUID-using-jobs.html) in the Scheduler documentation.

3. Click **Create Job**.

### <a id="view-settings"></a> View and Manage Settings

To view settings for an app, in the panel on the left side of the screen, under **Application**, click **Settings**.

You can do the following from the **Settings** page:

* Rename the app.
* View information about the buildpacks, start command, and stack.
* Configure health checks.
* View or add Environment Variables associated with the app.
* Add metadata to the app.
* View the App Security Groups (ASGs) associated with the app.
* Delete the app. When you click **Delete App**, you also have the option to delete the app's routes.

### <a id="health-checks"></a> Configure Health Checks

To configure health checks for your app:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Settings**.

1. In the **Health Check** section, click the **Type** drop down menu and select **port**, **http**, or **process**. Depending on which option you select, additional fields might appear.

1. For **Type**, select **port**, **http**, or **process**.

1. Complete the fields that appear based on your selection.

1. Click **Update**.

For more information, see [Using App Health Checks](../devguide/deploy-apps/healthchecks.html).

### <a id="view-env-var"></a> View Environment Variables

To view all environment variables for an app:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Settings**.

1. Under **User Provided Environment Variables**, click **Reveal Env Vars**.

### <a id="add-env-var"></a> Add Environment Variables

To add a user-provided environment variable:

1. Go to the app **Overview** page.

1. Go to  **Application**, and click **Settings**.

1. Click **Reveal User Provided Env Vars**.

1. Click **Add Environment Variable**.

1. Enter the **key** and **value** of the variable. Alternatively, toggle **Enter as JSON** to enter the variable in JSON.

    ![alt-text=""](./images/user-env-vars.png)

1. Click **Save**.

<p class="note"><strong>Note:</strong> Changes to environment variables, service bindings, and service unbindings require restarting the app to take effect. You can restart the app from the Apps Manager or with the Cloud Foundry Command Line Interface <code>cf restage</code> command.</p>

### <a id="metadata"></a> Add Metadata

You can add metadata, including labels and annotations, to apps and spaces using Apps Manager.

<% if vars.platform_code == "CF" || vars.platform_code == "PCF" %>

For more information about adding metadata to objects in <%= vars.app_runtime_first %>, see [Using Metadata](../adminguide/metadata.html).

<% else %>

For more information about adding metadata to objects in <%= vars.app_runtime_first %>, see [Using Metadata](https://docs.pivotal.io/platform/adminguide/metadata.html).

<% end %>

To add labels or annotations to an app using Apps Manager:

1. Go to the app **Overview** page.

1. Go to **Application**, and click **Settings**.

1. For **Labels**, provide a name and value pair. Or, select **Enter JSON** to enter the label in JSON.

1. For **Annotations**, provide a name and value pair. Or, select **Enter JSON** to enter the annotation in JSON.

1. To add more labels or annotations, click **+** next to the **Labels** or **Annotations** field.

1. Click **Update Metadata**.


## <a id='manage-service'></a> Manage a Service Instance

This section describes how to manage service instances in Apps Manager.

You can do the following tasks to manage service instances in Apps Manager:

* Bind or unbind apps.
* Bind or unbind routes.
* View or change your service plan.
* Manage service keys.
* Rename or delete your service instance.

<p class="note"><strong>Note:</strong> For services that use on-demand brokers, the service broker creates, updates, or deletes the service instance in the background and notifies you when it finishes.</p>

### <a id='view-service'></a> View Service Overview

The **Overview** page for a service instance includes information about bound apps, bound routes, and service key credentials for the service.

To go to the service instance **Overview** page:

1. Go to the landing page for the space of the service instance.

1. Go to **Space**, and click **Services**.

1. On the **Services** page, click the name of the service instance.

The following image shows an example of a service instance **Overview** page.

![alt-text=""](./images/services-binding.png)

### <a id='bind-app'></a> Bind an App

<p class="note"><strong>Note:</strong> For services that use asynchronous bindings, Apps Manager displays the status of the service while the bind is still pending. Asynchronous bindings provide more flexibility for services that require additional time before returning a successful bind response.</p>

To bind and app to a service:

1. On the service **Overview** page, click **Bind App**.

1. In the **Bind App** pop-up window, select the app to bind to the service instance.

![alt-text=""](./images/services-binding-popup.png)

1. (Optional) To attach parameters to the binding, click **Show Advanced Options**. Under **Arbitrary Parameters**, enter any additional service-specific configuration.

1. Click **Bind**.

### <a id='unbind-app'></a> Unbind an App

To unbind an app from a service instance:

1. On the service **Overview** page, go to **Bound Apps**, and click the **×** to the right of the app name. An **Unbind App** popup appears.

    ![alt-text=""](./images/services-unbinding-popup.png)
1. Click **Unbind** to confirm.

### <a id="shared-instances"></a> Share Service Instance

From the service **Overview** page, you can share your service instance across spaces.

To share a service instance:

1. On the service **Overview** page, click **Share Service Instance**.

    ![alt-text="The service instance button is located in the 'Overview' tab"](./images/share-service-instance-button.png)
1. Select the spaces with which you want to share your service instance.

    ![alt-text="The service instance slideout shows check boxes next to each space and a 'Share' button and 'Cancel' button in the bottom right-hand corner"](./images/share-services-slideout.png)
1. Click **Share**.

### <a id='view-plan'></a> View or Change Your Service Plan

To view or change your service plan:

1. Go to the service **Overview** page.

1. Go to **Service**, and click **Plan**.

1. Review your current plan information.

1. To change your plan, select a new plan from the list and click **Select This Plan** or **Upgrade Your Account**.

<p class="note"><strong>Note:</strong> Not all services support upgrading. If your service does not support upgrading, the service plan page only displays the selected plan.</p>

### <a id='rename-service'></a> Rename or Delete Your Service Instance

To rename or delete your service instance:

1. Go to the service **Overview** page.

1. Go to **Service**, and click **Settings**.

    ![alt-text=""](./images/services-settings.png)

1. Do one of these steps:
    * To change the service instance name, enter the new name and click **Update**.
    * To add configuration parameters to the service instance, enter the parameters in the **Name** and **Value** fields and then click **Update**. Alternatively, enter your configuration parameters using the **Enter JSON** toggle and then click **Update**.
    * To delete the service instance, click **Delete Service Instance**.

<p class="note"><strong>Note:</strong> The service broker supports creating, updating, and deleting service instances asynchronously. When the service broker completes one of these operations, a status banner appears in Apps Manager.</p>

<% if vars.platform_code == 'PCF' %>

### <a id='configure-scs'></a> View and Update Spring Cloud Services Configurations

For Spring Cloud Services (SCS) Config Server instances, Apps Manager lets you:

* See the Git repos that the SCS Config Server uses to configure the client apps that it serves. For more information, see [Configuring with Git](https://docs.pivotal.io/spring-cloud-services/common/config-server/configuring-with-git.html) in the SCS documentation.

* Update client app configurations, by updating the local mirrors of their configuration repos.

* See the current status and configuration of the SCS Config Server itself.

To see and update this configuration and status information for an SCS Config Server instance:

1. Go to the service **Overview** page.

1. Go to **Service**, and click **Config**.
    <p class="note"><strong>Note:</strong> The <strong>Configuration</strong> pane only appears for Spring Cloud Services instances.</p>

    ![alt-text=""](./images/sc-config-server-instance.png)
The **Config** pane includes:

* The current status of the SCS Config Server.

* The JSON object that configures settings for the SCS Config Server itself.
  * Passed in with `-c` flag to `cf create-service` and `cf update-service`.

* A **Synchronize Mirrors** button for the app configurations that the SCS Config Server serves.
  * Click this button to refresh the local Git repository mirrors. Refreshing the mirrors updates client app configuration settings, as described in [Mirror Service](https://docs.pivotal.io/spring-cloud-services/common/config-server/mirror-service.html) in the SCS documentation.

* A **Manage** link to the SCS Config Server dashboard, at the `/dashboard` URL endpoint of the SCS service instance.
  * Click this link to see the Git repos that the SCS Config Server uses to configure its apps.
  * For more information about the SCS Config Server dashboard, see [Dashboard Information](https://docs.pivotal.io/spring-cloud-services/common/config-server/using-the-dashboard.html#dashboard-information) in _Using the Dashboard_ in the SCS documentation.

### <a id='configure-user-provided'></a> Configure User-Provided Service Instance

You can create a user-provided service instance from the Marketplace. For more information, see [User-Provided Service Instances](../devguide/services/user-provided.html).

To configure settings for a user-provided service instance:

1. Go to the service **Overview** page.

1. Go to **Service**, and click **Configuration**.
    <p class="note"><strong>Note:</strong> The <strong>Configuration</strong> pane only appears for user-provided service instances.</p>
    ![alt-text="Configure settings for serevice instances."](./images/config-user-provided.png)
1. Enter the **Credential Parameters**, **Syslog Drain Url**, and **Route Service Url**.
    <% if vars.book_title != "Pivotal Web Services Documentation" %>
    <p class="note breaking"><strong>Breaking Change:</strong> In TAS for VMs v2.10, aggregate syslog drains contain
    only logs by default, and do not contain metrics. If you rely on metrics sent through aggregate syslog drains,
    you must add <code>?include-metrics-deprecated=true</code> to your aggregate drain URLs to continue to receive
    metrics in the drains.
    <br><br>
    For more information, see <a href="https://docs.pivotal.io/application-service/2-10/release-notes/runtime-rn.html#syslog-no-metrics">Aggregate Syslog Drains Contain Logs Only</a> in the <em><%= vars.app_runtime_abbr %> v2.10 Release Notes</em>.</p>
    <% end %>

1. Click **Update Service**.
<% else %>
<% end %>


## <a id='manage-keys'></a> Manage Service Keys

To manage service keys:

1. Go to the service **Overview** page.

1. Go to **Service Key Credentials**, generate a new service key, get the credentials for a service key, or delete a service key.

### <a id='create-key'></a> Generate a Service Key

To generate a new service key:

1. Go to the service **Overview** page.

1. Go to **Service Key Credentials**, and click **Create Service Key**.

1. Enter a **Service Key Name**.
![alt-text="Generate a service key."](./images/keys-create.png)

1. (Optional) Click **Show Advanced Options**. Under **Arbitrary Parameters**, enter any additional service-specific configuration in the **Name** and **Value** fields.
![alt-text="Generate a service key."](./images/keys-create-adv.png)

1. Click **Create** to generate the service key.

### <a id='get-creds'></a> View Credentials for a Service Key

To view the credentials for a service key:

1. Go to the service **Overview** page.

1. Go to **Service Key Credentials**, and click the service instance name. The JSON object containing the credentials appears.

    ![alt-text="Viewing a service key credential."](./images/keys-creds.png)

1. Click **Close**.

### <a id='delete-key'></a> Delete Service Key

To delete a service key:

1. Go to the service **Overview** page.

1. Go to **Service Key Credentials**, and click the **x** next to the service instance name.

    ![alt-text="Deleting a service key credential."](./images/keys-delete.png)

## <a id='manage-route-services'></a> Manage Route Services

You can bind a new service instance to a route when you create the instance in the Marketplace, or you can manage route services for an existing service instance on the service instance page.

For more information about route services, see [Route Services](../services/route-services.html).

### <a id='new-route-services'></a> Bind a New Service Instance to a Route

To bind a new service instance to a route:

1. Select the service from the Marketplace.
    ![alt-text=""](./images/bind-route-new.png)
1. Under **Bind to Route**, either bind the service instance to an existing route or click **Create Route** to create a new custom route.
    <p class="note"><strong>Note:</strong> You must choose a Marketplace service compatible with route services for the <strong>Bind to Route</strong> field to appear.</p>

1. Complete the remaining fields and click **Add** to create the service instance.

### <a id='old-route-services'></a> Bind an Existing Service Instance to a Route

To bind an existing service instance to a route:

1. Go to the service **Overview** page.

1. Go to **Bound Routes**, and click **Bind Route**.
    <p class="note"><strong>Note:</strong> If the service is not compatible with route services, the text "This service does not support route binding" appears under <strong>Bound Routes</strong>.</p>
    ![alt-text=""](./images/bind-route-old.png)

1. Do one of the following steps:
    * For **Select a route to bind**, select an existing route.
    * For **Create Custom Route**, enter a new route.

1. Click **Bind**.

### <a id='unbind-route-services'></a> Unbind a Route from a Service Instance

To unbind a route from a service instance:

1. Go to the service **Overview** page.

1. Go to **Bound Routes**, and click the **x** next to the name of the route.
