---
title: Managing your apps and service instances using Apps Manager
owner: Apps Manager
---

Apps Manager allows you to view and manage apps and service instances in <%= vars.app_runtime_first %>.

You can use Apps Manager to manage apps, service instances, service keys, and route services. This includes tasks such as scaling apps, binding apps to services, generating services keys, and more.

For information about managing orgs and spaces, see [Managing orgs and spaces using Apps Manager](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%=vars.current_major_version %>/tas-for-vms/manage-spaces.html).

<!-- This ensures that the following only appears in the TAS for VMs docs, not in the offline TAS docs.  -->
<% if vars.disallow_multi_foundation == true %>
<% else %>
You can manage apps and service instances across multiple foundations.
<% end %>


## <a id='prerequisite'></a> Prerequisite for Apps Manager

To view and manage apps and service instances with Apps Manager, you must log in to Apps Manager with an account that has adequate permissions.

For more information, see [About Permissions](dev-console.html#permissions) in _Getting Started with Apps Manager_.


## <a id='manage-app'></a> Manage an app

This section describes how to manage an app in Apps Manager.

You can do these tasks to manage apps in Apps Manager:

* View app summary information
* Start and stop apps
* Scale apps
* View sidecar processes
* View key app metrics
* Bind apps to services
* Manage environment variables and routes
* View logs and usage information
* View app revisions
* Re-deploy app revisions
* Delete apps
* Stop specific instances of apps

### <a id="view"></a> View app overview

The **Overview** page for an app includes app summary information, such as app processes and instances, app memory and disk space, and app events.

There are two ways to locate an app **Overview** page:

* On the space page, click the app you want to manage.
* Search for an app by entering its name in the search bar.

This image shows an example of an app **Overview** page.

![alt-text="The Processes and Instances section contains memory statistics. There are two buttons: Enable Autoscaling and Scale."](./images/app-page.png)

### <a id="start-stop"></a> Start, stop, or restage an app

You can start, stop, and restage from the **Overview** page of the app. The start, stop, and restage buttons are located on the app **Overview** page next to the name of the app.

This image shows the stop, restart, and restage buttons.

<%# To edit this diagram, go to https://drive.google.com/file/d/1X4GPXIaf9gPIjkHiDHDxTZWWVY4Wt0qn/view?usp=sharing.
You must be in the Pivotal org to edit the diagram.%>

![alt-text=""](./images/stop-restart-restage-app.png)

For more information about starting, stopping, and restaging apps with the Cloud Foundry Command Line Interface (cf CLI), see [Starting, restarting, and restaging apps](../devguide/deploy-apps/start-restart-restage.html).

### <a id="scale"></a> Scale an app

From the app **Overview** page, you can scale an app manually or configure App Autoscaler to scale it automatically.

#### <a id="manual-scale"></a> Scale an app manually

To manually scale an app:

1. Go to the app **Overview** page.

1. Under **Processes and Instances**, click **Scale** to open the scale app dialog box.

    ![alt-text=""](./images/scale-app.png)

2. Edit the number of **Instances**, the **Memory Limit**, and the **Disk Limit**.

3. Click **Apply Changes**.

#### <a id="autoscale"></a> Enable app autoscaler

You can enable App Autoscaler to automatically scale your apps. For information about how to configure App Autoscaler to scale an app automatically, see [Configure autoscaling for an app](../appsman-services/autoscaler/using-autoscaler.html#config) in _Scaling an App Using App Autoscaler_.

To enable App Autoscaler for an app:

1. Go to the app **Overview** page.

1. Under **Processes and Instances**, click **Enable Autoscaling** to enable App Autoscaler.

    ![alt-text=""](./images/enable-autoscaling.png)

2. Click **Manage Autoscaling** to open App Autoscaler.

### <a id='view-sidecars'></a> View sidecar processes

You can view the sidecar processes associated with your app from the app **Overview** page.

To view sidecar processes associated with your apps:

1. Go to the app **Overview** page.

1. Under **Processes and Instances**, see **Sidecars**. This section only appears if your app has any sidecar processes.
  ![alt-text=""](./images/sidecars.png)

For more information about sidecar processes, see [Pushing apps with sidecar processes](../devguide/sidecars.html).

### <a id='view-key-metrics'></a> View key metrics (beta)

If Metric Store is installed, you can view these key metrics for an app in the **Key Metrics** section of the app **Overview** page:

* CPU
* Memory
* Disk
* Request Latency
* Request Rate
* Request Errors

For more information about each metric, see [PCF Metrics](https://docs.vmware.com/en/App-Metrics-for-VMware-Tanzu/1.6/app-metrics/GUID-using.html).

For each metric, the app **Overview** page includes a graph that shows metric behavior over the past three hours.
You can hover over the data points on the graph to view the value of the metric.
The page also includes the average value for the metric over the past three hours.

Metric Store is required for Apps Manager to display the **Key Metrics** section.
For information about installing and configuring Metric Store, see [Metric Store](https://docs.vmware.com/en/Metric-Store/index.html).

This image is an example of an app **Overview** page, showing key metrics for the app.

![alt-text="The Apps Manager app overview page shows the six key metrics: CPU, Disk, Request Latency, Request Rate, and Request Errors."](./images/app-page-with-metrics.png)

### <a id="bind-unbind-services"></a> Bind or unbind services

You can bind your app to new or existing service instances. You can also unbind your app from service instances.

#### <a id="bind-existing-services"></a> Bind an app to an existing service

<p class="note"><span class="note__title">Note</span>For services that use asynchronous bindings, Apps Manager displays the status of the service while the bind is still pending. Asynchronous bindings provide more flexibility for services that require additional time before returning a successful bind response.</p>

To bind your app to an existing service:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Services**.

    ![alt-text=""](./images/bound-services.png)
1. Click **Bind Service**.

1. For **Service to Bind**, select the service instance from the drop-down menu.

1. (Optional) For **Binding Name**, enter a binding name in all lowercase letters. For example, `bind-usr-serv`.

1. (Optional) For **Add Parameters**, specify additional parameters.

1. Click **Bind**.

#### <a id="bind-new-services"></a> Bind an app to a new service

To bind your app to a new service instance:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Services**.

1. Click **New Service**.<br>
    ![alt-text=""](./images/new-service.png)
    <br>
    <p class="note"><span class="note__title">Note</span>If you prefer to create the new service instance in the Marketplace, you can click <strong>View in Marketplace</strong> at any time.</p>

1. Click the service.

1. Select a plan and click **Select Plan**.

1. Under **Instance Name**, enter a name for the instance.

1. (Optional) For **Binding Name**, enter a binding name in all lowercase letters. For example, `bind-usr-serv`.

1. (Optional) For **Add Parameters**, specify additional parameters. For a list of supported configuration parameters, consult the documentation for the service.

1. Click **Create**.

#### <a id="unbind-services"></a> Unbind a service

To unbind your app from a service instance:

1. Go to the app **Overview** page.

1. Go to **Application** and click **Services**.

1. Locate the service instance in the **Bound Services** list.

1. Click the three-dot icon.

1. Select **Unbind** from the drop-down menu.

### <a id="routes"></a> Map or unmap routes

The **Routes** page shows the routes associated with your app. You can use this page to map and unmap routes for your app.

#### <a id="map-routes"></a> Map routes

To map routes to your app:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Networking**, click **Routes**.

1. To add a new route, click **Map a Route**.
    ![alt-text=""](./images/routes.png)
1. Enter the route and click **Map**.

#### <a id="unmap-routes"></a> Unmap routes

To unmap a route from your app:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Networking**, click **Routes**.

1. Locate the route from the list and click the **x**.

1. Click **Unmap** in the pop-up window to confirm.

### <a id="networking"></a> Create container-to-container networking policies

Container networking policies enable app instances to communicate with each other directly. You can create container networking policies in the **Networking** tab.

For more information about container-to-container networking in <%= vars.platform_name %>, see [Container-to-Container Networking](../concepts/understand-cf-networking.html).

<p class="note important"><span class="note__title">Important</span>To view and use the <strong>Networking</strong> tab, you must have either the <code>network.write</code> or <code>network.admin</code> UAA scope. If you do not see the <strong>Networking</strong> tab, request one of the previous scopes from your <%= vars.platform_name %> administrator.</p>

To create container-to-container networking policies:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Networking**, click **Container Networking**. The page displays any container networking policies associated with the app.

1. To add a new network policy, click **Create Policy** or **Add a network policy**.
2. In the **Add Policy** window:
    *  For **Org**, select the org of the destination app.
    *  For **Space**, select the space of the destination app.
    *  For **App**, select the destination app.
    *  For **Protocol**, select **TCP** or **UDP**.
    *  For **Ports**, enter the ports at which to connect to the destination app. The allowed range is from `1` to `65535`. You can specify a single port, such as `8080`, or a range of ports, such as `8080-8090`.

3. Click **Save**.

### <a id="revisions"></a> Manage app revisions

A revision represents code and configuration used by an app at a specific time. It is a Cloud Foundry API (CAPI) object that can contain references to a droplet, custom start command, and environment variables. The most recent revision for a running app represents code and configuration currently running in <%= vars.platform_name %>.

You can view revisions, list environment variables associated with revisions, and re-deploy previous revisions in the **Revisions** tab.

For more information about app revisions in <%= vars.platform_name %>, see [App Revisions](../devguide/revisions.html).

#### <a id="view-revisions"></a> View app revisions

To list revisions for an app:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Revisions**.

1. View app revisions in the **Revisions** table.

#### <a id="revision-env-vars"></a> List environment variables for an app revision

To list environment variables associated with an app revision:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Revisions**.

1. In the **Revisions** table, select the row that contains the revision. The row expands to reveal metadata and environment variables associated with the revision.

#### <a id="rollback"></a> Roll back to a previous app revision

To roll back an app to a previous revision:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Revisions**.

1. In the **Revisions** table, select the row that contains the revision you want to roll back to. The row expands to reveal metadata.

1. Click **Redeploy**.

### <a id="logs"></a> View logs

You can view logs for an app in Apps Manager. You can also use Apps Manager to view a live stream of app logs.

To view logs for an app:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Observability**, click **Logs**.

1. Click the Play button to view a live version of the logs.

### <a id='tasks'></a> Manage tasks

The **Tasks** page includes jobs and tasks associated with an app. It displays a table containing **Task ID**, **State**, **Start Time**, **Task Name**, and **Command**.

From the **Tasks** page, you can view tasks, run tasks, and enable task scheduling.

#### <a id='view'></a> View tasks

You can view tasks for an app on the Tasks page in Apps Manager.

To access the **Tasks page**:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Tasks**.

#### <a id='run'></a> Run a task

To run a task for an app:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Tasks**.

1. Click **Run Task** to create a task.

    ![alt-text=""](./images/run-task.png)

1. (Optional) Enter a **Task Name**.

1. Enter the **Task Command**.

1. Select a **Memory Limit** and a **Disk Limit** for the task.

1. Click **Run**.

#### <a id="enable-scheduling"></a> Enable task scheduling

In the **Tasks** tab, click **Enable Scheduling** to bind the Scheduler service to your app. For more about Scheduler, see [Scheduling jobs](https://docs.vmware.com/en/Scheduler-for-VMware-Tanzu/1.6/scheduler-vmware-tanzu/GUID-index.html) in the Scheduler documentation.

![alt-text=""](./images/enable-scheduling.png)

#### <a id="schedule-task"></a> Schedule a task

To schedule a task:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Tasks**.

1. Click **Create Job** to schedule a task.

    ![alt-text=""](./images/create-job-window.png)

1. Enter a **Job Name**.

1. Enter a **Command**.

2. Enter one or more **Cron Expressions** for the task schedule or schedules you want. For more information about cron expression syntax, see [Scheduling jobs](https://docs.vmware.com/en/Scheduler-for-VMware-Tanzu/1.6/scheduler-vmware-tanzu/GUID-using-jobs.html) in the Scheduler documentation.

3. Click **Create Job**.

### <a id="view-settings"></a> View and manage settings

To view settings for an app, in the panel on the left side of the page, under **Application**, click **Settings**.

You can do the these tasks from the **Settings** page:

* Rename the app.
* View information about the buildpacks, start command, and stack.
* Configure health checks.
* View or add Environment Variables associated with the app.
* Add metadata to the app.
* View the App Security Groups (ASGs) associated with the app.
* Delete the app. When you click **Delete App**, you also have the option to delete the app's routes.

### <a id="health-checks"></a> Configure health checks

To configure health checks for your app:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Settings**.

1. In the **Health Check** section, click the **Type** drop-down menu and select **port**, **http**, or **process**. Depending on which option you select, additional text boxes might appear.

1. For **Type**, select **port**, **http**, or **process**.

1. Complete the text boxes that appear based on your selection.

1. Click **Update**.

For more information, see [Using app health checks](../devguide/deploy-apps/healthchecks.html).

### <a id="view-env-var"></a> View environment variables

To view all environment variables for an app:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Settings**.

1. Under **User Provided Environment Variables**, click **Reveal Env Vars**.

### <a id="add-env-var"></a> Add environment variables

To add a user-provided environment variable:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Settings**.

1. Click **Reveal User Provided Env Vars**.

1. Click **Add Environment Variable**.

1. Enter the **key** and **value** of the variable. Alternatively, toggle **Enter as JSON** to enter the variable in JSON.

    ![alt-text=""](./images/user-env-vars.png)

1. Click **Save**.

<p class="note important"><span class="note__title">Important</span>Changes to environment variables, service bindings, and service unbindings require restarting the app to take effect. You can restart the app from Apps Manager or with the Cloud Foundry CLI <code>cf restage</code> command.</p>

### <a id="metadata"></a> Add metadata

You can add metadata, including labels and annotations, to apps and spaces using Apps Manager.

<% if vars.platform_code == "CF" || vars.platform_code == "PCF" %>

For more information about adding metadata to objects in <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>), see [Using metadata](../adminguide/metadata.html).

<% else %>

For more information about adding metadata to objects in <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>), see [Using metadata](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.11/tas-for-vms/metadata.ht).

<% end %>

To add labels or annotations to an app using Apps Manager:

1. Go to the app **Overview** page.

1. In the panel on the left side of the page, under **Application**, click **Settings**.

1. For **Labels**, provide a name and value pair or click **Enter JSON** to enter the label in JSON.

1. For **Annotations**, provide a name and value pair or click **Enter JSON** to enter the annotation in JSON.

2. To add more labels or annotations, click **+** next to **Labels** or **Annotations**.

3. Click **Update Metadata**.


## <a id='manage-service'></a> Manage a service instance

This section describes how to manage service instances in Apps Manager.

You can do these tasks to manage service instances in Apps Manager:

* Bind or unbind apps.
* Bind or unbind routes.
* View or change your service plan.
* Manage service keys.
* Rename or delete your service instance.

<p class="note"><span class="note__title">Note</span>For services that use on-demand brokers, the service broker creates, updates, or deletes the service instance in the background and notifies you when it finishes.</p>

### <a id='view-service'></a> View service overview

The **Overview** page for a service instance includes information about bound apps, bound routes, and service key credentials for the service.

To locate the service instance **Overview** page:

1. Go to the landing page for the space of the service instance.

1. In the panel on the left side of the page, under **Space**, click **Services**.

1. On the **Services** page, click the name of the service instance.

This image shows an example of a service instance **Overview** page.

![alt-text=""](./images/services-binding.png)

### <a id='bind-app'></a> Bind an app

<p class="note"><span class="note__title">Note</span>For services that use asynchronous bindings, Apps Manager displays the status of the service while the bind is still pending. Asynchronous bindings provide more flexibility for services that require additional time before returning a successful bind response.</p>

To bind an app to a service:

1. On the service **Overview** page, click **Bind App**.

1. In the **Bind App** pop-up window, select the app to bind to the service instance.

![alt-text=""](./images/services-binding-popup.png)

1. (Optional) To attach parameters to the binding, click **Show Advanced Options**. Under **Arbitrary Parameters**, enter any additional service-specific configuration.

1. Click **Bind**.

### <a id='unbind-app'></a> Unbind an app

To unbind an app from a service instance:

1. On the service **Overview** page, go to **Bound Apps**, and click the **×** to the right of the app name. An **Unbind App** popup appears.

    ![alt-text=""](./images/services-unbinding-popup.png)
1. Click **Unbind** to confirm.

### <a id="shared-instances"></a> Share service instance

From the service **Overview** page, you can share your service instance across spaces.

To share a service instance:

1. On the service **Overview** page, click **Share Service Instance**.

    ![alt-text=""](./images/share-service-instance-button.png)
2. Select the spaces with which you want to share your service instance.

    ![alt-text="The service instance screen allows you select the space. You can then click Share or Cancel."](./images/share-services-slideout.png)
3. Click **Share**.

### <a id='view-plan'></a> View or change your service plan

To view or change your service plan:

1. Go to the service **Overview** page.

1. In the panel on the left side of the page, under **Service**, click **Plan**.

1. Review your current plan information.

1. To change your plan, select a new plan from the list and click **Select This Plan** or **Upgrade Your Account**. Not all services support upgrading. If your service does not support upgrading, the service plan page only displays the selected plan.

### <a id='rename-service'></a> Rename or delete your service instance

To rename or delete your service instance:

1. Go to the service **Overview** page.

1. In the panel on the left side of the page, under **Service**, click **Settings**.

    ![alt-text=""](./images/services-settings.png)

1. Do one of these steps:
    * To change the service instance name, enter the new name and click **Update**.
    * To add configuration parameters to the service instance, enter the parameters in the **Name** and **Value** text boxes and then click **Update**. Alternatively, enter your configuration parameters using the **Enter JSON** toggle and then click **Update**.
    * To delete the service instance, click **Delete Service Instance**.

<p class="note"><span class="note__title">Note</span>The service broker supports creating, updating, and deleting service instances asynchronously. When the service broker completes one of these operations, a status banner appears in Apps Manager.</p>

<% if vars.platform_code == 'PCF' %>

### <a id='configure-scs'></a> View and update spring cloud services configurations

For Spring Cloud Services (SCS) Config Server instances, Apps Manager lets you:

* See the Git repos that the SCS Config Server uses to configure the client apps that it serves. For more information, see the [Spring Cloud Services for VMware Tanzu Documentation](https://docs.vmware.com/en/Spring-Cloud-Services-for-VMware-Tanzu/index.html).

* Update client app configurations, by updating the local mirrors of their configuration repos.

* See the current status and configuration of the SCS Config Server itself.

To see and update this configuration and status information for an SCS Config Server instance:

1. Go to the service **Overview** page.

2. In the panel on the left side of the page, under **Service**, click **Config**. The **Configuration** pane appears only for Spring Cloud Services instances.

    ![alt-text=""](./images/sc-config-server-instance.png)

The **Config** pane includes:

* The current status of the SCS Config Server

* The JSON object that configures settings for the SCS Config Server
  * Passed in with `-c` flag to `cf create-service` and `cf update-service`

* A **Synchronize Mirrors** button for the app configurations that the SCS Config Server serves
  * Click this button to refresh the local Git repository mirrors. Refreshing the mirrors updates client app configuration settings, as described in [Config Server mirror service](https://docs.vmware.com/en/Spring-Cloud-Services-for-VMware-Tanzu/3.1/spring-cloud-services/GUID-config-server-mirror-service.html) in the SCS documentation.

* A **Manage** link to the SCS Config Server dashboard, at the `/dashboard` URL endpoint of the SCS service instance
  * Click this link to see the Git repos that the SCS Config Server uses to configure its apps.
  * For more information about the SCS Config Server dashboard, see [Using the dashboard](https://docs.vmware.com/en/Spring-Cloud-Services-for-VMware-Tanzu/3.1/spring-cloud-services/GUID-service-registry-using-the-dashboard.html).

### <a id='configure-user-provided'></a> Configure user-provided service instance

You can create a user-provided service instance from the Marketplace. For more information, see [User-Provided Service Instances](../devguide/services/user-provided.html).

To configure settings for a user-provided service instance:

1. Go to the service **Overview** page.

2. In the panel on the left side of the page, under **Service**, click **Configuration**. The **Configuration** pane only appears for user-provided service instances.
    ![alt-text=""](./images/config-user-provided.png)
3. Enter the **Credential Parameters**, **Syslog Drain Url**, and **Route Service Url**.

4. Click **Update Service**.
<% end %>


## <a id='manage-keys'></a> Manage service keys

To manage service keys:

1. Go to the service **Overview** page.

1. Go to **Service Key Credentials**, generate a new service key, get the credentials for a service key, or delete a service key.

### <a id='create-key'></a> Generate a service key

To generate a new service key:

1. Go to the service **Overview** page.

1. Go to **Service Key Credentials**, and click **Create Service Key**.

1. Enter a **Service Key Name**.
![alt-text=""](./images/keys-create.png)

1. (Optional) Click **Show Advanced Options**. Under **Arbitrary Parameters**, enter any additional service-specific configuration in **Name** and **Value**.
![alt-text=""](./images/keys-create-adv.png)

1. Click **Create** to generate the service key.

### <a id='get-creds'></a> View credentials for a service key

To view the credentials for a service key:

1. Go to the service **Overview** page.

1. Go to **Service Key Credentials**, and click the service instance name. The JSON object containing the credentials appears.

    ![alt-text=""](./images/keys-creds.png)

2. Click **Close**.

### <a id='delete-key'></a> Delete service key

To delete a service key:

1. Go to the service **Overview** page.

1. Go to **Service Key Credentials**, and click the **x** next to the service instance name.

    ![alt-text=""](./images/keys-delete.png)

## <a id='manage-route-services'></a> Manage route services

You can bind a new service instance to a route when you create the instance in the Marketplace, or you can manage route services for an existing service instance on the service instance page.

For more information about route services, see [Route Services](../services/route-services.html).

### <a id='new-route-services'></a> Bind a new service instance to a route

To bind a new service instance to a route:

1. Select the service from the Marketplace.
    ![alt-text=""](./images/bind-route-new.png)
2. Under **Bind to Route**, either bind the service instance to an existing route or click **Create Route** to create a new custom route. You must choose a Marketplace service compatible with route services for the **Bind to Route** text box to appear.

3. Fill in the remaining text boxes and click **Add** to create the service instance.

### <a id='old-route-services'></a> Bind an existing service instance to a route

To bind an existing service instance to a route:

1. Go to the service **Overview** page.

1. Go to **Bound Routes**, and click **Bind Route**.
    <p class="note"><span class="note__title">Note</span>If the service is not compatible with route services, the text "This service does not support route binding" appears under <strong>Bound Routes</strong>.</p>

    ![alt-text=""](./images/bind-route-old.png)

2. Do one of these steps:
    * For **Select a route to bind**, select an existing route.
    * For **Create Custom Route**, enter a new route.

3. Click **Bind**.

### <a id='unbind-route-services'></a> Unbind a route from a service instance

To unbind a route from a service instance:

1. Go to the service **Overview** page.

1. Go to **Bound Routes**, and click the **x** next to the name of the route.
